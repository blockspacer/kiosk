cmake_minimum_required(VERSION 3.4)
project(panelberry CXX)

set(CMAKE_MODULE_PATH
  ${PROJECT_SOURCE_DIR}/cmake
  ${CMAKE_MODULE_PATH})

set(TOPLEVEL_VERSION_MAJOR 0)
set(TOPLEVEL_VERSION_MINOR 1)
set(TOPLEVEL_VERSION_PATCH 0)
set(TOPLEVEL_VERSION_BUILD 1)
set(TOPLEVEL_VERSION_STABILITY "-alpha")
set(TOPLEVEL_VERSION ${TOPLEVEL_VERSION_MAJOR}.${TOPLEVEL_VERSION_MINOR}.${TOPLEVEL_VERSION_PATCH})

CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/project_version.h.in ${PROJECT_BINARY_DIR}/project_version.h)

include_directories(${PROJECT_SOURCE_DIR})
include_directories(${PROJECT_BINARY_DIR})

if (UNIX)
set(APP_DST bin)
set(LIB_DST lib/kiosk)
set(DATA_DST share/kiosk)
set(APPS_DST ${DATA_DST}/apps)

set(DEF_LIB_DST ${CMAKE_INSTALL_PREFIX}/${LIB_DST})
set(DEF_DATA_DST ${CMAKE_INSTALL_PREFIX}/${DATA_DST})
set(DEF_APPS_DST ${CMAKE_INSTALL_PREFIX}/${APPS_DST})

set(SHARE_PREFIX "share/")
set(LIB_PREFIX "lib/")
set(SHARE_ROOT "share/kiosk/")
set(LIB_ROOT "lib/kiosk/")
set(MAIN_BIN "bin")
else()
set(LIB_DST runtime)
set(DATA_DST runtime)
set(APPS_DST apps)

set(DEF_LIB_DST ${LIB_DST})
set(DEF_DATA_DST ${DATA_DST})
set(DEF_APPS_DST ${APPS_DST})

set(SHARE_PREFIX "")
set(LIB_PREFIX "")
set(SHARE_ROOT "")
set(LIB_ROOT "")
set(MAIN_BIN ".")
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG   "")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG   "..")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "..")

add_subdirectory(libs lib)
add_subdirectory(plugins/pphue ${LIB_PREFIX}kiosk/plugins/pphue)
add_subdirectory(apps/runtime ${SHARE_PREFIX}kiosk/runtime)
add_subdirectory(apps/kiosk ${SHARE_PREFIX}kiosk)
add_subdirectory(apps/kiosk-apps ${SHARE_PREFIX}kiosk/apps)

set(CPACK_PACKAGE_VENDOR "midnightBITS")
set(CPACK_PACKAGE_CONTACT "panelberry-maintainers@midnightbits.com")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Control panel for IoT devices on RPi")
set(CPACK_PACKAGE_VERSION_MAJOR "${TOPLEVEL_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${TOPLEVEL_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${TOPLEVEL_VERSION_PATCH}")
set(CPACK_PACKAGE_VERSION "${TOPLEVEL_VERSION}${TOPLEVEL_VERSION_STABILITY}+${TOPLEVEL_VERSION_BUILD}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "${PROJECT_NAME} ${TOPLEVEL_VERSION_MAJOR}.${TOPLEVEL_VERSION_MINOR}")
include(CPack)
